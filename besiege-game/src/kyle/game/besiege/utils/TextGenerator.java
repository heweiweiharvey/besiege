package kyle.game.besiege.utils;

import java.io.BufferedReader;
import java.util.Scanner;

import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.files.FileHandle;

/**********************************************************************
 *    Name:     Kyle Dhillon and Keshav Singh
 *    Login:    kdhillon, keshavs
 *    Precept:  PO2A, P02
 * 
 *    Takes two command-line integers k and T, reads the input text from
 *    standard input, builds a Markov model of order k from the input text
 *    and prints out T characters generated by simulating a trajectory
 *    through the corresponding Markov chain.
 *
 * 
 *    Dependencies: MarkovModel.java, StdIn.java
 * 
 *    Execution 
 * 
 *********************************************************************/

public class TextGenerator {
	public TextGenerator(String filename) {
		int k = 2;
		int T = 12; // cut off excess.
		
		Scanner in = new Scanner(Gdx.files.internal("data/units/standard_biomes.txt").reader()).useDelimiter("\\t\\t*|\r\n[\r\n]*");
		FileHandle f = Gdx.files.internal("data/namegen/khmer");
		
//		String text = "Chicago Atlanta Bermuda Bahamas Detroit";       //reads text from standard input
		BufferedReader in2 = new BufferedReader(Gdx.files.internal("data/namegen/khmer").reader());
		String text = in.toString();
		System.out.println(text);
//		String kgram = text.substring(0, k); // create kgram
//		MarkovModel mm = new MarkovModel(text, k); //builds a Markov model
//		System.out.println(mm.gen("Ph", T)); //prints out T characters 
	}

	public static void main(String[] args) {
		TextGenerator tg = new TextGenerator("khmer_source.txt");
	
	}
}